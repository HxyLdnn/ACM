/*在 "All-in at the Valorant "赌场的密室里，每晚都有打a的聚集在一起，目睹一场高水平的对决，这场对决将各自的运气发挥到了极致。两位玩家，他们的名字分别是Qfish！以及shadow！，成了主要的看点。今晚，他们分别代表214的队长以及216的队长，在翻牌前阶段下注他们的一切，大胆地展示着他们的边缘技巧。新生们看得如痴如醉，被这种简单而激烈的游戏所吸引，在这里没有策略，只有运气。赢家获得全部掌声，输家则一无所有。
 
在简化版的赌局对轰中，两位队长对决，策略被运气所取代。两位队长一开始都有固定数量的筹码：Qfish玩家有a个筹码，shadow有b个筹码。在每一轮游戏中，两名玩家在看到各自的牌之前就会选择操作。之后，所有牌只发一次。由于平局时不会有任何变化，因此我们假设没有平局发生，Qfish以概率 1/2 独立获胜，因为这是一个公平的游戏。本轮比赛结束如下：
 
如果赢者的筹码至少等于输者的筹码，游戏结束，赢者拿走所有筹码。
否则，输者支付与赢者相同数量的筹码，然后开始新一轮游戏。
您想知道在这些条件下两位队长赢得游戏（拿走所有筹码）的概率。
Input
输入包括两个整数a,b (1≤a,b<998244353,a+b<998244353)，分别表示Qfish和shadow开始时的筹码数。

Output
在一行中打印两个整数，中间用空格隔开：分别表示两位队长获胜的概率，以整数表示。  
 
两位队长获胜的概率取模为998244353，用整数表示。  
 
  
有关的期望值将是一个有理数。如果我们把它表示成一个小数 xy，其中 x和 y是同序正整数，那么 x将与 P=998244353同序。因此，打印在 0和 P−1（含）之间的唯一整数 z，使得 xz≡y(modP)。（或者称作逆元）
Sample Input
1 3
Sample Output
748683265 249561089*/

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;

ll sum = 0;
ll flag = 0;
ll mod = 998244353;
int exgcd(int a, int b, int &x, int &y)
{
    if (b == 0)
    {
        x = 1, y = 0;
        return a;
    }
    int d = exgcd(b, a % b, y, x);
    y -= a / b * x;
    return d;
}

int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    ll a, b;
    cin >> a >> b;
    int x = 1, y = 0, d;
    d = exgcd(a + b, mod, x, y);
    cout << (a % mod * x % mod + mod) % mod << ' ' << (b % mod * x % mod + mod) % mod << '\n';
}
